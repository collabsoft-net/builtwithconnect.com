version: 2.1
jobs:

  # cloud - production
  connect-report-app-functions:
    executor: functions
    steps:
      - functions:
          project: connect-report-app

  connect-report-app-hosting:
    executor: hosting
    steps:
      - hosting:
          project: connect-report-app

executors:
      
  functions:
    docker:
      - image: cimg/node:16.14.2-browsers
    resource_class: large
    working_directory: ~/connect/standalone/functions

  hosting:
    docker:
      - image: cimg/node:16.14.2-browsers
    resource_class: large
    working_directory: ~/connect/standalone

commands:

  prepare:
    steps:
      - checkout:
          path: ~/connect

      - run:
          name: Setup environment
          command: |
            npm install --prefix=$HOME/.local yarn@berry -g
            yarn --version

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "~/connect/yarn.lock" }}
      - run: 
          name: Install dependencies
          command: |
            (cd ~/connect && yarn install --immutable)

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "~/connect/yarn.lock" }}
          paths:
            - ~/connect/.yarn/cache
            - ~/connect/.yarn/unplugged

  functions:
    parameters:
      project:
        type: string
    steps:
      - prepare

      - deploy:
          name: Deploy firebase functions
          command: yarn run firebase deploy -f --only functions --project << parameters.project >>

  hosting:
    parameters:
      project:
        type: string
    steps:
      - prepare
      
      - deploy:
          name: Deploy firebase hosting & database
          command: |
            export NODE_ENV=production
            yarn build
            yarn run firebase deploy -f --only hosting --project << parameters.project >>

workflows:
  version: 2
  deploy:
    jobs:
      # Cloud - Production
      - connect-report-app-functions:
          filters:
            branches:
              only: main
          context: connect.report
      - connect-report-app-hosting:
          requires:
            - connect-report-app-functions
          filters:
            branches:
              only: main
          context: connect.report
